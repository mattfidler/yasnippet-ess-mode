# -*- mode: snippet -*-
# name: Lattice y-log10 scale
# key: ylog10
# --
yscale.components.log10 <- function(lim, ...) {
  logTicks <- function (lim, loc = c(1, 10), base=10) {
    ii <-floor(log(range(lim), base)) + c(-1, 2)
    main <- base^(ii[1]:ii[2])
    r <- as.numeric(outer(loc, main, "*"))
    r[lim[1] <= r & r <= lim[2]]
  }
  ans <- yscale.components.default(lim = lim, ...)
  tick.at <- logTicks(10^lim, loc = 1:9)
  tick.at.major <- logTicks(10^lim, loc = 1)
  major <- tick.at %in% tick.at.major
  if (length(tick.at) == 1){
    ans <-  yscale.components.default(lim,...);
    ans$left$labels$labels <- parse(text=paste("10^",ans$left$ticks$at,sep=""));
    ans$left$labels$check.overlap <- TRUE;
    return(ans);
  } else if (length(tick.at) <= 9){
    ans$left$labels$labels <- gsub("e([+-])0?","0^",paste(tick.at));
    ans$left$ticks$at <- log(tick.at, 10)
    ans$left$ticks$tck <- rep(1,length(tick.at));
    ans$left$labels$at <- log(tick.at, 10)
    ans$left$labels$check.overlap <- TRUE;
    return(ans);
  } else {
    if (sum(major*1) >= 9) {
      ans$left$labels$labels <- paste("10^",log10(tick.at),sep="");
    } else {
      ans$left$labels$labels <- gsub("e([+-])0?","0^",paste(tick.at));
    }
    ans$left$ticks$at <- log(tick.at, 10)
    ans$left$ticks$tck <- ifelse(major, 1.5, 0.75)
    ans$left$labels$at <- log(tick.at, 10)
    ans$left$labels$labels[!major] <- ""
    while (sum(major*1) >= 15){
      w <-  which(ans$left$labels$labels != "");
      w <-  w[seq(2,length(w),by=2)];
      ans$left$labels$labels[w] = "";
      major[w] = FALSE;
    }
    ans$left$labels$labels[major] <- parse(text=ans$left$labels$labels[major]);
    ans$left$labels$check.overlap <- FALSE
    return(ans)
  }
}